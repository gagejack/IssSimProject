package mainPackage;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.*;

public class MainGUIS{

	// ------------------------------------- LOGIN PANEL THINGS -------------------------------------
	
	private int loginWidth = 300;
	private int loginHeight = 350;
	
	private JFrame loginFrame = new JFrame();
	private JLayeredPane loginLayeredPane = new JLayeredPane();


	
	private int loginTitleLabelX = 100;
	private int loginTitleLabelY = 10;
	private int createButtonX = 75;
	private int createButtonY = 200 + 20;
	private int loginButtonX = 110;
	private int loginButtonY = 160 + 20;
	private int cancelButtonX = 110;
	private int cancelButtonY = 240 + 20;
	private int userLabelX = 50;
	private int userLabelY = 20 + 20;
	private int userTextFieldX = 50;
	private int userTextFieldY = 50+ 20;
	private int passwordLabelX = 50;
	private int passwordLabelY = 90+ 20;
	private int passTextFieldX = 50;
	private int passTextFieldY = 120+ 20;

	private JButton createUserButton;
	private JButton loginButton;
	private JButton cancelButton;
	
	private JLabel userLabel;
	private JTextField userText;
	
	private JLabel passLabel;
	private JTextField passText;
	
	private JLabel loginTitleLabel;
	
	// ------------------------------------- Create Window Stuff -------------------------------------

	private JFrame createFrame = new JFrame();
	private JLayeredPane createLayeredPane = new JLayeredPane();
	private int createWidth = 400;
	private int createHeight = 300;
	
	// ------------------------------------- Main Window Stuff -------------------------------------
	
	private int mainWidth = 500;
	private int mainHeight = 500;
	
	private JFrame mainFrame;	
	JLayeredPane layeredPane = new JLayeredPane();

	
	// ------------------------------------- Images -------------------------------------
	
	int keyWidth = 50;  // Set desired width for arrow keys
	int keyHeight = 50; // Set desired height for arrow keys

	ImageIcon upArrowIcon = new ImageIcon(
	        new ImageIcon(new File("src/UI/upArrow.png").getAbsolutePath())
	                .getImage().getScaledInstance(keyWidth, keyHeight, Image.SCALE_SMOOTH));
	JLabel upArrowLabel = new JLabel(upArrowIcon);

	ImageIcon downArrowIcon = new ImageIcon(
	        new ImageIcon(new File("src/UI/downArrow.png").getAbsolutePath())
	                .getImage().getScaledInstance(keyWidth, keyHeight, Image.SCALE_SMOOTH));
	JLabel downArrowLabel = new JLabel(downArrowIcon);

	ImageIcon leftArrowIcon = new ImageIcon(
	        new ImageIcon(new File("src/UI/leftArrow.png").getAbsolutePath())
	                .getImage().getScaledInstance(keyWidth, keyHeight, Image.SCALE_SMOOTH));
	JLabel leftArrowLabel = new JLabel(leftArrowIcon);

	ImageIcon rightArrowIcon = new ImageIcon(
	        new ImageIcon(new File("src/UI/rightArrow.png").getAbsolutePath())
	                .getImage().getScaledInstance(keyWidth, keyHeight, Image.SCALE_SMOOTH));
	JLabel rightArrowLabel = new JLabel(rightArrowIcon);

	int loginBgWidth = 400;  // Adjust background width
	int loginBgHeight = 400; // Adjust background height

	ImageIcon mainBgIcon = new ImageIcon(
	        new ImageIcon(new File("src/UI/horizon.png").getAbsolutePath())
	                .getImage().getScaledInstance(mainWidth, mainHeight, Image.SCALE_SMOOTH));
	JLabel horizonLabel = new JLabel(mainBgIcon);

	ImageIcon loginBgIcon = new ImageIcon(
	        new ImageIcon(new File("src/UI/horizon.png").getAbsolutePath())
	                .getImage().getScaledInstance(loginBgWidth, loginBgHeight, Image.SCALE_SMOOTH));
	JLabel loginBackgroundLabel = new JLabel(loginBgIcon);


	
	
	// ------------------------------------- LOGIN GUI Object -------------------------------------
	
	public MainGUIS() {
		
		loginFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		loginFrame.setSize(loginWidth,loginHeight);
		loginFrame.setLocationRelativeTo(null);
		loginFrame.setResizable(false);
		
		loginLayeredPane.setBounds(0, 0, loginWidth, loginHeight);
		loginFrame.add(loginLayeredPane);
		displayLoginBackground();
		
		/*
		loginPanel = new JPanel();
		loginFrame.add(loginPanel);
		loginPanel.setLayout(null);
		loginPanel.setVisible(true);
		*/
		
		loginTitleLabel = new JLabel("ISS SIM");
		loginTitleLabel.setForeground(Color.WHITE);
		loginTitleLabel.setBounds(loginTitleLabelX,loginTitleLabelY,80,25);
        loginLayeredPane.add(loginTitleLabel, Integer.valueOf(2));
        
		userLabel = new JLabel("Username: ");
        userLabel.setForeground(Color.WHITE);
        userLabel.setBounds(userLabelX,userLabelY,80,25);
        loginLayeredPane.add(userLabel, Integer.valueOf(2));
        
        userText = new JTextField();
      //  userText.setOpaque(false);
        userText.setBounds(userTextFieldX,userTextFieldY,200,25);
        loginLayeredPane.add(userText,Integer.valueOf(2));
        
        passLabel = new JLabel("Password: ");
        passLabel.setForeground(Color.WHITE);
        passLabel.setBounds(passwordLabelX,passwordLabelY,80,25);
        loginLayeredPane.add(passLabel,Integer.valueOf(2));
        
        passText = new JPasswordField();
      //  passText.setOpaque(false);
        passText.setBounds(passTextFieldX,passTextFieldY,200,25);
        loginLayeredPane.add(passText,Integer.valueOf(2));
        
        createUserButton = new JButton("Create User");
        createUserButton.setBounds(createButtonX, createButtonY, 150, 25);
        createUserListener(createUserButton);
        loginLayeredPane.add(createUserButton,Integer.valueOf(2));

        loginButton = new JButton("Login");
        loginButton.setBounds(loginButtonX, loginButtonY, 80, 25);
        loginUserListener(loginButton);
        loginLayeredPane.add(loginButton,Integer.valueOf(2));
        
        cancelButton = new JButton("Cancel");
        cancelButton.setBounds(cancelButtonX, cancelButtonY, 80, 25);
        cancelLoginListener(cancelButton);
        loginLayeredPane.add(cancelButton,Integer.valueOf(2));
        
	}
	

	// ------------------------------------- Main Window -------------------------------------

	
	public void openMainWindow() throws IOException {
		mainFrame = new JFrame();
		mainFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		mainFrame.setSize(mainWidth,mainHeight);
		mainFrame.setLocationRelativeTo(null);
		mainFrame.setLayout(null);
		
		layeredPane.setBounds(0, 0, 500, 500);
		mainFrame.add(layeredPane);
		
		displayMainBg();
		displayArrowKeys();
				
		upKeyListener(layeredPane);
		downKeyListener(layeredPane);
		leftKeyListener(layeredPane);
		rightKeyListener(layeredPane);

		
		mainFrame.setVisible(true);
		}
	
	// ------------------------------------- Main Window -------------------------------------

	
		public void openCreateWindow() throws IOException {
			createFrame = new JFrame();
			createFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
			createFrame.setSize(createWidth,createHeight);
			createFrame.setLocationRelativeTo(null);
			createFrame.setLayout(null);
			
			createLayeredPane.setBounds(0, 0, createWidth, createHeight);
			createFrame.add(createLayeredPane);
			
			createFrame.setVisible(true);
			}
		
	// ------------------------------------- Display Images Methods -------------------------------------

	public void displayLoginBackground() {
	    if (loginBgIcon.getIconWidth() == -1) {  // Check if image was loaded successfully
	        System.out.println("Error: Background file not found!");
	        return;
	    }
	    loginBackgroundLabel.setBounds(0,0,loginWidth,loginHeight);
	    loginLayeredPane.add(loginBackgroundLabel, Integer.valueOf(1)); // Add to the background layer

	}
	
	public void displayMainBg() {
	    if (mainBgIcon.getIconWidth() == -1) {  // Check if image was loaded successfully
	        System.out.println("Error: Horizon file not found!");
	        return;
	    }
	    horizonLabel.setBounds(0,0,mainWidth,mainHeight);
	    layeredPane.add(horizonLabel, Integer.valueOf(1)); // Add to the background layer

	}
	
	public void displayArrowKeys() {    
		
		upArrowLabel.setBounds(225, 340, 50, 50);    // Top center
		downArrowLabel.setBounds(225, 400, 50, 50);  // Bottom center
		leftArrowLabel.setBounds(downArrowLabel.getX()-60, 400, 50, 50);  // Left center
		rightArrowLabel.setBounds(downArrowLabel.getX()+60, 400, 50, 50); // Right center
	
		// Add labels to the mainFrame
		layeredPane.add(upArrowLabel, Integer.valueOf(2));
	    layeredPane.add(downArrowLabel, Integer.valueOf(2));
	    layeredPane.add(leftArrowLabel, Integer.valueOf(2));
	    layeredPane.add(rightArrowLabel, Integer.valueOf(2));
    
	}
	
	
	public void increaseSizeOnClick(JLabel button) {
		
	}
	
	public void showLogin() {
        loginFrame.setVisible(true); // Explicitly show the window
    }
	
	// ------------------------------------ KEY LISTENERS --------------------------------------------------
	
	public void upKeyListener(JLayeredPane layeredPane2) {
	    layeredPane2.getInputMap(JPanel.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke("UP"), "moveUp");
	    layeredPane2.getActionMap().put("moveUp", new AbstractAction() {
	        @Override
	        public void actionPerformed(ActionEvent e) {
	            System.out.println("Up arrow key pressed!");
	        }
	    });
	}
	
	public void downKeyListener(JLayeredPane layeredPane2) {
	    layeredPane2.getInputMap(JPanel.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke("DOWN"), "moveDown");
	    layeredPane2.getActionMap().put("moveDown", new AbstractAction() {
	        @Override
	        public void actionPerformed(ActionEvent e) {
	            System.out.println("Down arrow key pressed!");
	        }
	    });
	}
	
	public void rightKeyListener(JLayeredPane layeredPane2) {
	    layeredPane2.getInputMap(JPanel.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke("RIGHT"), "moveRight");
	    layeredPane2.getActionMap().put("moveRight", new AbstractAction() {
	        @Override
	        public void actionPerformed(ActionEvent e) {
	            System.out.println("Right arrow key pressed!");
	        }
	    });
	}
	
	public void leftKeyListener(JLayeredPane layeredPane2) {
	    layeredPane2.getInputMap(JPanel.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke("LEFT"), "moveLeft");
	    layeredPane2.getActionMap().put("moveLeft", new AbstractAction() {
	        @Override
	        public void actionPerformed(ActionEvent e) {
	            System.out.println("Left arrow key pressed!");
	        }
	    });
	}
	
	// ------------------------------------ LOGIN BUTTON LISTENERS --------------------------------------------------

	public void createLoginListener(JButton button) {
		button.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				try {
					openCreateWindow();
				} catch (IOException e1) {
					// TODO Auto-generated catch block
					e1.printStackTrace();
				}
			}});
	}
	
	public void loginUserListener(JButton button) {
		button.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
                String user = userText.getText();
                String pass = new String(passText.getText());
                
                UserInfo userInfo = new UserInfo();
                if(userInfo.checkUser(user, pass)) {
                    JOptionPane.showMessageDialog(loginFrame, "User " + user + " logged in successfully!");
                    try {
						openMainWindow();
					} catch (IOException e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
					}    // ------------------------------------------------------------------- After successful login, Open the main program window                    
                    System.out.println("Opening main window");
                    loginFrame.dispose();
                } else {
                    JOptionPane.showMessageDialog(loginFrame, "User " + user + " failed to login");

                }
                
            }
		});
	}
	
	public void cancelLoginListener(JButton button) {
		button.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
                loginFrame.dispose();
            }
		});
	}
	
	// ------------------------------------ CREATEUSER BUTTON LISTENER --------------------------------------------------

	
	public void createUserListener(JButton button) {
		button.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
                String user = userText.getText();
                String pass = new String(passText.getText());
                UserInfo userInfo = new UserInfo();
                if(userInfo.passwordValidate(pass)) {
                	System.out.println("Creating user: " + user + " with password: " + pass);
                    JOptionPane.showMessageDialog(loginFrame, "User " + user + " created successfully!");
    				userInfo.saveUser(user, pass);
                } else {
                    JOptionPane.showMessageDialog(loginFrame, "Password must contain a digit, an uppercase, and be 9 characters long");
                }
            }
		});
	}
	
}
